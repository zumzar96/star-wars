{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder (2)\\\\react-complete-guide-code-14-sending-http-requests\\\\code\\\\01-starting-project\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }\n\n  ;\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }, \"Found no movies.\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/New folder (2)/react-complete-guide-code-14-sending-http-requests/code/01-starting-project/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","content","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEA,iBAAeS,kBAAf,GAAoC;AAChCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACtD,eAAO;AACHC,UAAAA,EAAE,EAAED,SAAS,CAACE,UADX;AAEHC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAFd;AAGHC,UAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHpB;AAIHC,UAAAA,WAAW,EAAEN,SAAS,CAACO;AAJpB,SAAP;AAMH,OAPyB,CAA1B;AAQAtB,MAAAA,SAAS,CAACY,iBAAD,CAAT;AACH,KAjBD,CAiBE,OAAOT,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;AACH;;AACDrB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AAAA;AAGD,MAAIsB,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAd;;AAEA,MAAIzB,MAAM,CAAC0B,MAAP,GAAgB,CAApB,EAAuB;AACnBD,IAAAA,OAAO,gBAAG,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAEzB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACH;;AAED,MAAII,KAAJ,EAAW;AACPqB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIrB,KAAJ,CAAV;AACH;;AAED,MAAIF,SAAJ,EAAe;AACXuB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAV;AACH;;AAED,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEnB,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUmB,OAAV,CAJJ,CADJ;AAQH;;AAED,eAAe1B,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    async function fetchMoviesHandler() {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch('https://swapi.dev/api/films/');\n            if (!response.ok) {\n                throw new Error('Something went wrong!');\n            }\n\n            const data = await response.json();\n\n            const transformedMovies = data.results.map((movieData) => {\n                return {\n                    id: movieData.episode_id,\n                    title: movieData.title,\n                    openingText: movieData.opening_crawl,\n                    releaseDate: movieData.release_date,\n                };\n            });\n            setMovies(transformedMovies);\n        } catch (error) {\n            setError(error.message);\n        }\n        setIsLoading(false);\n    };\n\n    \n    let content = <p>Found no movies.</p>;\n\n    if (movies.length > 0) {\n        content = <MoviesList movies={movies} />;\n    }\n\n    if (error) {\n        content = <p>{error}</p>;\n    }\n\n    if (isLoading) {\n        content = <p>Loading...</p>;\n    }\n\n    return (\n        <React.Fragment>\n            <section>\n                <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n            </section>\n            <section>{content}</section>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}