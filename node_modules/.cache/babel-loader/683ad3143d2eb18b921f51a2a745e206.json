{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder (2)\\\\react-complete-guide-code-14-sending-http-requests\\\\code\\\\01-starting-project\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://https-react-2688a-default-rtdb.europe-west1.firebasedatabase.app/movies.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://https-react-2688a-default-rtdb.europe-west1.firebasedatabase.app/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, \"Found no movies.\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/New folder (2)/react-complete-guide-code-14-sending-http-requests/code/01-starting-project/src/App.js"],"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","openingText","releaseDate","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","content","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const fetchMoviesHandler = useCallback(async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch('https://https-react-2688a-default-rtdb.europe-west1.firebasedatabase.app/movies.json');\n            if (!response.ok) {\n                throw new Error('Something went wrong!');\n            }\n\n            const data = await response.json();\n\n            const loadedMovies = [];\n\n            for (const key in data) {\n                loadedMovies.push({\n                    id: key,\n                    title: data[key].title,\n                    openingText: data[key].openingText,\n                    releaseDate: data[key].releaseDate,\n                });\n            }\n\n            setMovies(loadedMovies);\n        } catch (error) {\n            setError(error.message);\n        }\n        setIsLoading(false);\n    }, []);\n\n    useEffect(() => {\n        fetchMoviesHandler();\n    }, [fetchMoviesHandler]);\n\n    async function addMovieHandler(movie) {\n        const response = await fetch('https://https-react-2688a-default-rtdb.europe-west1.firebasedatabase.app/movies.json', {\n            method: 'POST',\n            body: JSON.stringify(movie),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await response.json();\n        console.log(data);\n    }\n\n    let content = <p>Found no movies.</p>;\n\n    if (movies.length > 0) {\n        content = <MoviesList movies={movies} />;\n    }\n\n    if (error) {\n        content = <p>{error}</p>;\n    }\n\n    if (isLoading) {\n        content = <p>Loading...</p>;\n    }\n\n    return (\n        <React.Fragment>\n            <section>\n                <AddMovie onAddMovie={addMovieHandler} />\n            </section>\n            <section>\n                <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n            </section>\n            <section>{content}</section>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}